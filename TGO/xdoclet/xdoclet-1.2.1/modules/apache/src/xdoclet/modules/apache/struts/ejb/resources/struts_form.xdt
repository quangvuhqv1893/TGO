package <XDtPackage:packageOf><XDtStrutsForm:strutsFormClass/></XDtPackage:packageOf>;

/**
 * <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" resource="form_generated"/>
 *
 * @struts.form name="<XDtStrutsForm:strutsFormName/>"
 */
public class <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>
    extends    <XDtClass:classTagValue tagName="struts.form" paramName="extends" default="org.apache.struts.action.ActionForm" />
    implements java.io.Serializable<XDtClass:ifHasClassTag tagName="struts.form" paramName="implements" superclasses="false">, <XDtClass:classTagValue tagName="struts.form" paramName="implements" superclasses="false"/></XDtClass:ifHasClassTag>
{
    <XDtStrutsForm:forAllFormFields>
    protected <XDtMethod:methodType/> <XDtMethod:propertyName/>;
    </XDtStrutsForm:forAllFormFields>

    /** <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" resource="form_empty_constructor"/> */
    public <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>() {}

  <XDtEjbDataObj:ifIsWithDataContainer>
    /** <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" resource="form_dataobject_constructor"/> */
    public <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>(<XDtEjbDataObj:dataObjectClass /> dataHolder)
    {
    <XDtEjbPersistent:forAllPersistentFields superclasses="false">
	 <XDtStrutsForm:ifUseMethodInForm>
       this.<XDtMethod:setterMethod/>(dataHolder.<XDtMethod:getterMethod/>());
	 </XDtStrutsForm:ifUseMethodInForm>
	</XDtEjbPersistent:forAllPersistentFields>
    }
  </XDtEjbDataObj:ifIsWithDataContainer>

    <XDtStrutsForm:forAllFormFields>

    public <XDtMethod:methodType/> <XDtMethod:getterMethod/>()<XDtMethod:exceptionList/>
    {
        return this.<XDtMethod:propertyName/>;
    }

    public void <XDtMethod:setterMethod/>( <XDtMethod:methodType/> <XDtMethod:propertyName/> )
    {
        this.<XDtMethod:propertyName/> = <XDtMethod:propertyName/>;
    }

    </XDtStrutsForm:forAllFormFields>

  <XDtEjbDataObj:ifIsWithDataContainer>
    public <XDtEjbDataObj:dataObjectClass /> getData(<XDtEjbDataObj:dataObjectClass /> dataHolder)
    {
       <XDtEjbDataObj:dataObjectClass /> retData = new <XDtEjbDataObj:dataObjectClass />(dataHolder);

       <XDtEjbPersistent:forAllPersistentFields superclasses="false">
	   	<XDtStrutsForm:ifUseMethodInForm>
        retData.<XDtMethod:setterMethod/>(this.<XDtMethod:getterMethod/>());
		</XDtStrutsForm:ifUseMethodInForm>
       </XDtEjbPersistent:forAllPersistentFields>

        return retData;
    }

    public <XDtEjbDataObj:dataObjectClass /> getData()
    {
       <XDtEjbDataObj:dataObjectClass /> retData = new <XDtEjbDataObj:dataObjectClass />();

       <XDtEjbPersistent:forAllPersistentFields superclasses="false">
	   	<XDtStrutsForm:ifUseMethodInForm>
        retData.<XDtMethod:setterMethod/>(this.<XDtMethod:getterMethod/>());
		</XDtStrutsForm:ifUseMethodInForm>
       </XDtEjbPersistent:forAllPersistentFields>

        return retData;
    }

    public void setData(<XDtEjbDataObj:dataObjectClass /> dataHolder)
    {
        <XDtEjbPersistent:forAllPersistentFields superclasses="false">
		<XDtStrutsForm:ifUseMethodInForm>
        this.<XDtMethod:setterMethod/> (dataHolder.<XDtMethod:getterMethod/>());
		</XDtStrutsForm:ifUseMethodInForm>
        </XDtEjbPersistent:forAllPersistentFields>
    }

  </XDtEjbDataObj:ifIsWithDataContainer>
}
