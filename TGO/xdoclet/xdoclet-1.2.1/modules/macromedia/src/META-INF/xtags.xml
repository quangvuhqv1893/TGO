<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xdoclet PUBLIC "-//XDoclet Team//DTD XDoclet Tags 1.1//EN" "http://xdoclet.sourceforge.net/dtds/xtags_1_1.dtd">

<xdoclet>
  <!-- JRun tags -->
  <namespace>
    <name>jrun</name>
    <usage-description>Macromedia JRun J2EE Server</usage-description>
    <condition-description>EJB</condition-description>
    <condition type="and">
      <condition type="or">
        <condition type="method"/>
        <condition type="class"/>
      </condition>
      <condition type="or">
        <condition type="type">
          <condition-parameter>javax.ejb.EntityBean</condition-parameter>
        </condition>
        <condition type="type">
          <condition-parameter>javax.ejb.SessionBean</condition-parameter>
        </condition>
      </condition>
    </condition>
    <tags>
      <tag>
        <level>class</level>
        <name>jrun.always-dirty</name>
        <usage-description>The always-dirty element can be used to force
                synchronization with the data source at the ends of transactions
                even when there has been no change to the entity bean's fields</usage-description>
        <unique>true</unique>
        <condition-description>Entity Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.EntityBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="bool">
          <name>value</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default>false</default>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.cluster-home</name>
        <usage-description>The cluster-home element denotes whether the
                EJBHome should be clustered for this bean. If clustering is
                enabled in jrun.xml, this value is true by default. You can use
                this element to override this behavior on a bean-by-bean basis</usage-description>
        <unique>true</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>value</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.cluster-object</name>
        <usage-description>The cluster-object element denotes whether
                the EJBObject should be clustered for this bean. If clustering
                is enabled in jrun.xml, this value is true by default. You can
                use this element to override this behavior on a bean-by-bean
                basis</usage-description>
        <unique>true</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>value</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.commit-option</name>
        <usage-description>The commit-option element specifies the the
                commit option from Section 10.5.9 and 12.1.9 of the EJB 2.0
                specification</usage-description>
        <unique>true</unique>
        <condition-description>Entity Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.EntityBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="text">
          <name>value</name>
          <usage-description>A or B or C</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.ejb-local-ref</name>
        <usage-description>The ejb-local-ref element describes a mapping
                between the ejb-ref-name that the bean developer provides and
                its JNDI name. The deployer provides the actual JNDI name</usage-description>
        <unique>false</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>ejb-ref-name</name>
          <usage-description>The ejb-ref-name element gives the name
                    of an EJB from the ejb-jar.xml file. The bean developer this
                    information</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>jndi-name</name>
          <usage-description>The jndi-name element gives the JNDI name
                    where the bean or resource will be bound</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.ejb-ref</name>
        <usage-description>The ejb-ref element describes a mapping
                between the ejb-ref-name that the bean developer provides and
                its JNDI name. The deployer provides the actual JNDI name</usage-description>
        <unique>false</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>ejb-ref-name</name>
          <usage-description>The ejb-ref-name element gives the name
                    of an EJB from the ejb-jar.xml file. The bean developer this
                    information</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>jndi-name</name>
          <usage-description>The jndi-name element gives the JNDI name
                    where the bean or resource will be bound</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.instance-pool</name>
        <usage-description>The instance-pool element contains the
                maximum and minimum size parameters for StatelessSessionBean
                instance pools</usage-description>
        <unique>true</unique>
        <condition-description>Session Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.SessionBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="int">
          <name>maximum-size</name>
          <usage-description>The maximum-size element specifies the
                    maximum size for StatelessSessionBean instance pools</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="int">
          <name>minimum-size</name>
          <usage-description>The minimum-size element specifies the
                    minimum size for StatelessSessionBean instance pools</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.jdbc-mappings</name>
        <usage-description>The jdbc-mappings element holds information
                specific to JRun and not declared in the ejb-jar.xml file about
                the CMP mappings for an entity bean. jdbc-mappings are used to
                specify the SQL used to create, load, store, find and remove
                entity beans</usage-description>
        <unique>true</unique>
        <condition-description>Entity Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.EntityBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="bool">
          <name>create-table</name>
          <usage-description>Whether JRun will attempt to create
                    database tables</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="bool">
          <name>delete-table</name>
          <usage-description>Whether JRun will attempt to delete
                    database tables</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.jndi-name</name>
        <usage-description>The jndi-name element gives the JNDI name
                where the bean or resource will be bound</usage-description>
        <unique>true</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>jndi-name</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.message-driven-destination</name>
        <usage-description>The message-driven-destination element
                provides the destination that the Message driven container uses</usage-description>
        <unique>true</unique>
        <condition-description>MD Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.MessageDrivenBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="text">
          <name>name</name>
          <usage-description>The name element defines the parameter name</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.message-driven-subscription</name>
        <usage-description>The message-driven-destination element
                provides the destination that the Message driven container uses</usage-description>
        <unique>true</unique>
        <condition-description>MD Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.MessageDrivenBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="text">
          <name>client-id</name>
          <usage-description>The client-id element provides client id
                    for DurableSubscription setup and sign on</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.resource-env-ref</name>
        <usage-description>The resource-env-ref element describes a
                mapping between the resource-env-name that the bean developer
                provides and its JNDI name. The deployer provides the actual
                JNDI name</usage-description>
        <unique>true</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.MessageDrivenBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>resource-env-ref-name</name>
          <usage-description>The resource-env-ref-name element gives
                    the name of a resource env from EJB view. The bean developer
                    provides this information</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>jndi-name</name>
          <usage-description>The jndi-name element gives the JNDI name
                    where the bean or resource will be bound</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>mdb-destination</name>
          <usage-description>The mdb-destination element specifies a
                    message-driven bean destination</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.resource-ref</name>
        <usage-description>The resource-ref element describes a mapping
                between the resource name that the bean developer provides and
                its JNDI name. The deployer provides the actual JNDI name</usage-description>
        <unique>true</unique>
        <condition-description>EJB Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.MessageDrivenBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>resource-ref-name</name>
          <usage-description>The res-ref-name element gives the name
                    of a resource from EJB view. The bean developer provides
                    this information</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>jndi-name</name>
          <usage-description>The jndi-name element gives the JNDI name
                    where the bean or resource will be bound</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>user</name>
          <usage-description>The user element assigns a user identity
                    to be used with a specified resource</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
        <parameter type="text">
          <name>password</name>
          <usage-description>The password element provides user
                    credentials to be used with user element to identify and
                    authenticate a specified resource</usage-description>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.timeout</name>
        <usage-description>The timeout element specifies the timeout
                value, in seconds, of a stateful session bean. The bean will be
                passivated if left idle for this duration</usage-description>
        <unique>true</unique>
        <condition-description>Stateful Session Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="type">
            <condition-parameter>javax.ejb.SessionBean</condition-parameter>
          </condition>
        </condition>
        <parameter type="text">
          <name>value</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
      <tag>
        <level>class</level>
        <name>jrun.tx-domain</name>
        <usage-description>The tx-domain-name element gives the
                transaction domain name in which the bean's transactions will
                take place</usage-description>
        <unique>true</unique>
        <condition-description>Entity Beans</condition-description>
        <condition type="and">
          <condition type="class"/>
          <condition type="or">
            <condition type="type">
              <condition-parameter>javax.ejb.EntityBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.SessionBean</condition-parameter>
            </condition>
            <condition type="type">
              <condition-parameter>javax.ejb.MessageDrivenBean</condition-parameter>
            </condition>
          </condition>
        </condition>
        <parameter type="text">
          <name>value</name>
          <usage-description/>
          <mandatory>true</mandatory>
          <default/>
        </parameter>
      </tag>
    </tags>
  </namespace>
</xdoclet>
