/*
 * <XDtI18n:getString bundle="xdoclet.modules.ejb.XDocletModulesEjbMessages" resource="do_not_edit"/>
 */
package <XDtPackage:packageOf><XDtEjbSession:sessionClass/></XDtPackage:packageOf>;

/**
 * <XDtI18n:getString bundle="xdoclet.modules.ejb.XDocletModulesEjbMessages" resource="session_layer_for" arguments="<XDtEjb:ejbName/>"/>
<XDtClass:classCommentTags indent="0"/> */
public class <XDtClass:classOf><XDtEjbSession:sessionClass/></XDtClass:classOf>
   extends <XDtClass:fullClassName/>
   implements javax.ejb.SessionBean
{
   public void ejbActivate() <XDtMethod:exceptionList method="ejbActivate"/>
   {
     <XDtMethod:ifHasMethod name="ejbActivate">
      super.ejbActivate();
     </XDtMethod:ifHasMethod>
   }

   public void ejbPassivate() <XDtMethod:exceptionList method="ejbPassivate"/>
   {
     <XDtMethod:ifHasMethod name="ejbPassivate">
      super.ejbPassivate();
     </XDtMethod:ifHasMethod>
   }

   public void setSessionContext(javax.ejb.SessionContext ctx) <XDtMethod:exceptionList method="setSessionContext"/>
   {
     <XDtMethod:ifHasMethod name="setSessionContext" parameters="javax.ejb.SessionContext">
      super.setSessionContext(ctx);
     </XDtMethod:ifHasMethod>
   }

   public void unsetSessionContext() <XDtMethod:exceptionList method="unsetSessionContext"/>
   {
     <XDtMethod:ifHasMethod name="unsetSessionContext">
      super.unsetSessionContext();
     </XDtMethod:ifHasMethod>
   }

   public void ejbRemove() <XDtMethod:exceptionList method="ejbRemove"/>
   {
     <XDtMethod:ifHasMethod name="ejbRemove">
      super.ejbRemove();
     </XDtMethod:ifHasMethod>
   }

 <XDtEjbSession:ifStatelessSession>
  <XDtMethod:ifDoesntHaveMethod name="ejbCreate">
   public void ejbCreate() throws javax.ejb.CreateException
   {
   }
  </XDtMethod:ifDoesntHaveMethod>
 </XDtEjbSession:ifStatelessSession>

<XDtEjbDao:ifUsingDao>
   <XDtMerge:merge file="xdoclet/modules/ejb/dao/resources/dao-methods.xdt">
   </XDtMerge:merge>
</XDtEjbDao:ifUsingDao>

   <XDtMerge:merge file="session-custom.xdt">
   </XDtMerge:merge>
}
